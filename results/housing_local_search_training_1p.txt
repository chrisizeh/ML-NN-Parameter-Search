{'learning_rate': 0.1, 'batch_size': 64}
run: {'learning_rate': 0.1, 'batch_size': 64, 'layer': [5, 5, 2, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=5, out_features=5, bias=True)
    (1): ReLU()
    (2): Linear(in_features=5, out_features=2, bias=True)
    (3): ReLU()
    (4): Linear(in_features=2, out_features=1, bias=True)
    (5): ReLU()
  )
)
Step 0
Best Params, Parameter Combination [0.1, 64] with keys ['learning_rate', 'batch_size']
 Accuracy: 21.7

run: {'learning_rate': 0.0824, 'batch_size': 48, 'layer': [5, 5, 2, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=5, out_features=5, bias=True)
    (1): ReLU()
    (2): Linear(in_features=5, out_features=2, bias=True)
    (3): ReLU()
    (4): Linear(in_features=2, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination (0.0824, 48) with keys ['learning_rate', 'batch_size']
 Accuracy: 34.0

run: {'learning_rate': 0.0824, 'batch_size': 73, 'layer': [5, 5, 2, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=5, out_features=5, bias=True)
    (1): ReLU()
    (2): Linear(in_features=5, out_features=2, bias=True)
    (3): ReLU()
    (4): Linear(in_features=2, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination (0.0824, 73) with keys ['learning_rate', 'batch_size']
 Accuracy: 0.0

run: {'learning_rate': 0.11506, 'batch_size': 48, 'layer': [5, 5, 2, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=5, out_features=5, bias=True)
    (1): ReLU()
    (2): Linear(in_features=5, out_features=2, bias=True)
    (3): ReLU()
    (4): Linear(in_features=2, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination (0.11506, 48) with keys ['learning_rate', 'batch_size']
 Accuracy: 0.0

run: {'learning_rate': 0.11506, 'batch_size': 73, 'layer': [5, 5, 2, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=5, out_features=5, bias=True)
    (1): ReLU()
    (2): Linear(in_features=5, out_features=2, bias=True)
    (3): ReLU()
    (4): Linear(in_features=2, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination (0.11506, 73) with keys ['learning_rate', 'batch_size']
 Accuracy: 32.8

Grid search took 0.6 minutes.
Step 1
Best Params, Parameter Combination (0.0824, 48) with keys ['learning_rate', 'batch_size']
 Accuracy: 34.0

run: {'learning_rate': 0.05942, 'batch_size': 40, 'layer': [5, 5, 2, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=5, out_features=5, bias=True)
    (1): ReLU()
    (2): Linear(in_features=5, out_features=2, bias=True)
    (3): ReLU()
    (4): Linear(in_features=2, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination (0.05942, 40) with keys ['learning_rate', 'batch_size']
 Accuracy: 0.0

run: {'learning_rate': 0.05942, 'batch_size': 53, 'layer': [5, 5, 2, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=5, out_features=5, bias=True)
    (1): ReLU()
    (2): Linear(in_features=5, out_features=2, bias=True)
    (3): ReLU()
    (4): Linear(in_features=2, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination (0.05942, 53) with keys ['learning_rate', 'batch_size']
 Accuracy: 0.0

run: {'learning_rate': 0.10382, 'batch_size': 40, 'layer': [5, 5, 2, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=5, out_features=5, bias=True)
    (1): ReLU()
    (2): Linear(in_features=5, out_features=2, bias=True)
    (3): ReLU()
    (4): Linear(in_features=2, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination (0.10382, 40) with keys ['learning_rate', 'batch_size']
 Accuracy: 34.0

run: {'learning_rate': 0.10382, 'batch_size': 53, 'layer': [5, 5, 2, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=5, out_features=5, bias=True)
    (1): ReLU()
    (2): Linear(in_features=5, out_features=2, bias=True)
    (3): ReLU()
    (4): Linear(in_features=2, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination (0.10382, 53) with keys ['learning_rate', 'batch_size']
 Accuracy: 0.0

Grid search took 0.6 minutes.
Step 2
Best Params, Parameter Combination (0.0824, 48) with keys ['learning_rate', 'batch_size']
 Accuracy: 34.0

run: {'learning_rate': 0.06439, 'batch_size': 37, 'layer': [5, 5, 2, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=5, out_features=5, bias=True)
    (1): ReLU()
    (2): Linear(in_features=5, out_features=2, bias=True)
    (3): ReLU()
    (4): Linear(in_features=2, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination (0.06439, 37) with keys ['learning_rate', 'batch_size']
 Accuracy: 0.0

run: {'learning_rate': 0.06439, 'batch_size': 56, 'layer': [5, 5, 2, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=5, out_features=5, bias=True)
    (1): ReLU()
    (2): Linear(in_features=5, out_features=2, bias=True)
    (3): ReLU()
    (4): Linear(in_features=2, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination (0.06439, 56) with keys ['learning_rate', 'batch_size']
 Accuracy: 0.0

run: {'learning_rate': 0.0989, 'batch_size': 37, 'layer': [5, 5, 2, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=5, out_features=5, bias=True)
    (1): ReLU()
    (2): Linear(in_features=5, out_features=2, bias=True)
    (3): ReLU()
    (4): Linear(in_features=2, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination (0.0989, 37) with keys ['learning_rate', 'batch_size']
 Accuracy: 0.0

run: {'learning_rate': 0.0989, 'batch_size': 56, 'layer': [5, 5, 2, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=5, out_features=5, bias=True)
    (1): ReLU()
    (2): Linear(in_features=5, out_features=2, bias=True)
    (3): ReLU()
    (4): Linear(in_features=2, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination (0.0989, 56) with keys ['learning_rate', 'batch_size']
 Accuracy: 0.0

Grid search took 0.7 minutes.
Step 3
Best Params, Parameter Combination (0.0824, 48) with keys ['learning_rate', 'batch_size']
 Accuracy: 34.0

run: {'learning_rate': 0.06394, 'batch_size': 37, 'layer': [5, 5, 2, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=5, out_features=5, bias=True)
    (1): ReLU()
    (2): Linear(in_features=5, out_features=2, bias=True)
    (3): ReLU()
    (4): Linear(in_features=2, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination (0.06394, 37) with keys ['learning_rate', 'batch_size']
 Accuracy: 33.9

run: {'learning_rate': 0.06394, 'batch_size': 52, 'layer': [5, 5, 2, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=5, out_features=5, bias=True)
    (1): ReLU()
    (2): Linear(in_features=5, out_features=2, bias=True)
    (3): ReLU()
    (4): Linear(in_features=2, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination (0.06394, 52) with keys ['learning_rate', 'batch_size']
 Accuracy: 0.0

run: {'learning_rate': 0.10691, 'batch_size': 37, 'layer': [5, 5, 2, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=5, out_features=5, bias=True)
    (1): ReLU()
    (2): Linear(in_features=5, out_features=2, bias=True)
    (3): ReLU()
    (4): Linear(in_features=2, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination (0.10691, 37) with keys ['learning_rate', 'batch_size']
 Accuracy: 33.2

run: {'learning_rate': 0.10691, 'batch_size': 52, 'layer': [5, 5, 2, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=5, out_features=5, bias=True)
    (1): ReLU()
    (2): Linear(in_features=5, out_features=2, bias=True)
    (3): ReLU()
    (4): Linear(in_features=2, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination (0.10691, 52) with keys ['learning_rate', 'batch_size']
 Accuracy: 0.0

Grid search took 0.6 minutes.
Step 4
Best Params, Parameter Combination (0.0824, 48) with keys ['learning_rate', 'batch_size']
 Accuracy: 34.0

run: {'learning_rate': 0.05985, 'batch_size': 39, 'layer': [5, 5, 2, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=5, out_features=5, bias=True)
    (1): ReLU()
    (2): Linear(in_features=5, out_features=2, bias=True)
    (3): ReLU()
    (4): Linear(in_features=2, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination (0.05985, 39) with keys ['learning_rate', 'batch_size']
 Accuracy: 23.8

run: {'learning_rate': 0.05985, 'batch_size': 57, 'layer': [5, 5, 2, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=5, out_features=5, bias=True)
    (1): ReLU()
    (2): Linear(in_features=5, out_features=2, bias=True)
    (3): ReLU()
    (4): Linear(in_features=2, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination (0.05985, 57) with keys ['learning_rate', 'batch_size']
 Accuracy: 0.0

run: {'learning_rate': 0.10557, 'batch_size': 39, 'layer': [5, 5, 2, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=5, out_features=5, bias=True)
    (1): ReLU()
    (2): Linear(in_features=5, out_features=2, bias=True)
    (3): ReLU()
    (4): Linear(in_features=2, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination (0.10557, 39) with keys ['learning_rate', 'batch_size']
 Accuracy: 21.5

run: {'learning_rate': 0.10557, 'batch_size': 57, 'layer': [5, 5, 2, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=5, out_features=5, bias=True)
    (1): ReLU()
    (2): Linear(in_features=5, out_features=2, bias=True)
    (3): ReLU()
    (4): Linear(in_features=2, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination (0.10557, 57) with keys ['learning_rate', 'batch_size']
 Accuracy: 34.3

Grid search took 0.6 minutes.
Local search took 3.2 minutes.
(0.10557, 57)
