['layer', 'dropout', 'activation']
dict_values([[19, 50, 50, 1], 0, <class 'torch.nn.modules.activation.ReLU'>])
run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 50, 50, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=50, bias=True)
    (1): ReLU()
    (2): Linear(in_features=50, out_features=50, bias=True)
    (3): ReLU()
    (4): Linear(in_features=50, out_features=1, bias=True)
    (5): ReLU()
  )
)
Step 0
Best Params, Parameter Combination [[19, 50, 50, 1], 0, <class 'torch.nn.modules.activation.ReLU'>] with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.4

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 35, 44, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=35, bias=True)
    (1): ReLU()
    (2): Linear(in_features=35, out_features=44, bias=True)
    (3): ReLU()
    (4): Linear(in_features=44, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination ([19, 35, 44, 1], 0, <class 'torch.nn.modules.activation.ReLU'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 0.0

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 35, 44, 1], 'activation': <class 'torch.nn.modules.activation.Sigmoid'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=35, bias=True)
    (1): Sigmoid()
    (2): Linear(in_features=35, out_features=44, bias=True)
    (3): Sigmoid()
    (4): Linear(in_features=44, out_features=1, bias=True)
    (5): Sigmoid()
  )
)
Parameter Combination ([19, 35, 44, 1], 0, <class 'torch.nn.modules.activation.Sigmoid'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 30.7

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 35, 44, 1], 'activation': <class 'torch.nn.modules.linear.Identity'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=35, bias=True)
    (1): Identity()
    (2): Linear(in_features=35, out_features=44, bias=True)
    (3): Identity()
    (4): Linear(in_features=44, out_features=1, bias=True)
    (5): Identity()
  )
)
Parameter Combination ([19, 35, 44, 1], 0, <class 'torch.nn.modules.linear.Identity'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 39.9

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 35, 44, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=35, bias=True)
    (1): ReLU()
    (2): Linear(in_features=35, out_features=44, bias=True)
    (3): ReLU()
    (4): Linear(in_features=44, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination ([19, 35, 44, 1], 0, <class 'torch.nn.modules.activation.ReLU'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.5

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 35, 44, 1], 'activation': <class 'torch.nn.modules.activation.Sigmoid'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=35, bias=True)
    (1): Sigmoid()
    (2): Linear(in_features=35, out_features=44, bias=True)
    (3): Sigmoid()
    (4): Linear(in_features=44, out_features=1, bias=True)
    (5): Sigmoid()
  )
)
Parameter Combination ([19, 35, 44, 1], 0, <class 'torch.nn.modules.activation.Sigmoid'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 30.7

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 35, 44, 1], 'activation': <class 'torch.nn.modules.linear.Identity'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=35, bias=True)
    (1): Identity()
    (2): Linear(in_features=35, out_features=44, bias=True)
    (3): Identity()
    (4): Linear(in_features=44, out_features=1, bias=True)
    (5): Identity()
  )
)
Parameter Combination ([19, 35, 44, 1], 0, <class 'torch.nn.modules.linear.Identity'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.1

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 56, 57, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=56, bias=True)
    (1): ReLU()
    (2): Linear(in_features=56, out_features=57, bias=True)
    (3): ReLU()
    (4): Linear(in_features=57, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination ([19, 56, 57, 1], 0, <class 'torch.nn.modules.activation.ReLU'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 0.0

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 56, 57, 1], 'activation': <class 'torch.nn.modules.activation.Sigmoid'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=56, bias=True)
    (1): Sigmoid()
    (2): Linear(in_features=56, out_features=57, bias=True)
    (3): Sigmoid()
    (4): Linear(in_features=57, out_features=1, bias=True)
    (5): Sigmoid()
  )
)
Parameter Combination ([19, 56, 57, 1], 0, <class 'torch.nn.modules.activation.Sigmoid'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 30.6

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 56, 57, 1], 'activation': <class 'torch.nn.modules.linear.Identity'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=56, bias=True)
    (1): Identity()
    (2): Linear(in_features=56, out_features=57, bias=True)
    (3): Identity()
    (4): Linear(in_features=57, out_features=1, bias=True)
    (5): Identity()
  )
)
Parameter Combination ([19, 56, 57, 1], 0, <class 'torch.nn.modules.linear.Identity'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.0

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 56, 57, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=56, bias=True)
    (1): ReLU()
    (2): Linear(in_features=56, out_features=57, bias=True)
    (3): ReLU()
    (4): Linear(in_features=57, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination ([19, 56, 57, 1], 0, <class 'torch.nn.modules.activation.ReLU'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 0.0

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 56, 57, 1], 'activation': <class 'torch.nn.modules.activation.Sigmoid'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=56, bias=True)
    (1): Sigmoid()
    (2): Linear(in_features=56, out_features=57, bias=True)
    (3): Sigmoid()
    (4): Linear(in_features=57, out_features=1, bias=True)
    (5): Sigmoid()
  )
)
Parameter Combination ([19, 56, 57, 1], 0, <class 'torch.nn.modules.activation.Sigmoid'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 30.7

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 56, 57, 1], 'activation': <class 'torch.nn.modules.linear.Identity'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=56, bias=True)
    (1): Identity()
    (2): Linear(in_features=56, out_features=57, bias=True)
    (3): Identity()
    (4): Linear(in_features=57, out_features=1, bias=True)
    (5): Identity()
  )
)
Parameter Combination ([19, 56, 57, 1], 0, <class 'torch.nn.modules.linear.Identity'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.0

Grid search took 0.8 minutes.
Step 1
Best Params, Parameter Combination ([19, 35, 44, 1], 0, <class 'torch.nn.modules.activation.ReLU'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.5

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 29, 39, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=29, bias=True)
    (1): ReLU()
    (2): Linear(in_features=29, out_features=39, bias=True)
    (3): ReLU()
    (4): Linear(in_features=39, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination ([19, 29, 39, 1], 0, <class 'torch.nn.modules.activation.ReLU'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.7

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 29, 39, 1], 'activation': <class 'torch.nn.modules.activation.Sigmoid'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=29, bias=True)
    (1): Sigmoid()
    (2): Linear(in_features=29, out_features=39, bias=True)
    (3): Sigmoid()
    (4): Linear(in_features=39, out_features=1, bias=True)
    (5): Sigmoid()
  )
)
Parameter Combination ([19, 29, 39, 1], 0, <class 'torch.nn.modules.activation.Sigmoid'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 30.7

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 29, 39, 1], 'activation': <class 'torch.nn.modules.linear.Identity'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=29, bias=True)
    (1): Identity()
    (2): Linear(in_features=29, out_features=39, bias=True)
    (3): Identity()
    (4): Linear(in_features=39, out_features=1, bias=True)
    (5): Identity()
  )
)
Parameter Combination ([19, 29, 39, 1], 0, <class 'torch.nn.modules.linear.Identity'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.2

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 29, 39, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=29, bias=True)
    (1): ReLU()
    (2): Linear(in_features=29, out_features=39, bias=True)
    (3): ReLU()
    (4): Linear(in_features=39, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination ([19, 29, 39, 1], 0, <class 'torch.nn.modules.activation.ReLU'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.7

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 29, 39, 1], 'activation': <class 'torch.nn.modules.activation.Sigmoid'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=29, bias=True)
    (1): Sigmoid()
    (2): Linear(in_features=29, out_features=39, bias=True)
    (3): Sigmoid()
    (4): Linear(in_features=39, out_features=1, bias=True)
    (5): Sigmoid()
  )
)
Parameter Combination ([19, 29, 39, 1], 0, <class 'torch.nn.modules.activation.Sigmoid'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 30.7

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 29, 39, 1], 'activation': <class 'torch.nn.modules.linear.Identity'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=29, bias=True)
    (1): Identity()
    (2): Linear(in_features=29, out_features=39, bias=True)
    (3): Identity()
    (4): Linear(in_features=39, out_features=1, bias=True)
    (5): Identity()
  )
)
Parameter Combination ([19, 29, 39, 1], 0, <class 'torch.nn.modules.linear.Identity'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.0

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 44, 54, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=44, bias=True)
    (1): ReLU()
    (2): Linear(in_features=44, out_features=54, bias=True)
    (3): ReLU()
    (4): Linear(in_features=54, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination ([19, 44, 54, 1], 0, <class 'torch.nn.modules.activation.ReLU'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.7

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 44, 54, 1], 'activation': <class 'torch.nn.modules.activation.Sigmoid'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=44, bias=True)
    (1): Sigmoid()
    (2): Linear(in_features=44, out_features=54, bias=True)
    (3): Sigmoid()
    (4): Linear(in_features=54, out_features=1, bias=True)
    (5): Sigmoid()
  )
)
Parameter Combination ([19, 44, 54, 1], 0, <class 'torch.nn.modules.activation.Sigmoid'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 30.6

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 44, 54, 1], 'activation': <class 'torch.nn.modules.linear.Identity'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=44, bias=True)
    (1): Identity()
    (2): Linear(in_features=44, out_features=54, bias=True)
    (3): Identity()
    (4): Linear(in_features=54, out_features=1, bias=True)
    (5): Identity()
  )
)
Parameter Combination ([19, 44, 54, 1], 0, <class 'torch.nn.modules.linear.Identity'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.2

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 44, 54, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=44, bias=True)
    (1): ReLU()
    (2): Linear(in_features=44, out_features=54, bias=True)
    (3): ReLU()
    (4): Linear(in_features=54, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination ([19, 44, 54, 1], 0, <class 'torch.nn.modules.activation.ReLU'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 0.0

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 44, 54, 1], 'activation': <class 'torch.nn.modules.activation.Sigmoid'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=44, bias=True)
    (1): Sigmoid()
    (2): Linear(in_features=44, out_features=54, bias=True)
    (3): Sigmoid()
    (4): Linear(in_features=54, out_features=1, bias=True)
    (5): Sigmoid()
  )
)
Parameter Combination ([19, 44, 54, 1], 0, <class 'torch.nn.modules.activation.Sigmoid'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 30.6

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 44, 54, 1], 'activation': <class 'torch.nn.modules.linear.Identity'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=44, bias=True)
    (1): Identity()
    (2): Linear(in_features=44, out_features=54, bias=True)
    (3): Identity()
    (4): Linear(in_features=54, out_features=1, bias=True)
    (5): Identity()
  )
)
Parameter Combination ([19, 44, 54, 1], 0, <class 'torch.nn.modules.linear.Identity'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.2

Grid search took 0.8 minutes.
Step 2
Best Params, Parameter Combination ([19, 29, 39, 1], 0, <class 'torch.nn.modules.activation.ReLU'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.7

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 22, 32, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=22, bias=True)
    (1): ReLU()
    (2): Linear(in_features=22, out_features=32, bias=True)
    (3): ReLU()
    (4): Linear(in_features=32, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination ([19, 22, 32, 1], 0, <class 'torch.nn.modules.activation.ReLU'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.1

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 22, 32, 1], 'activation': <class 'torch.nn.modules.activation.Sigmoid'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=22, bias=True)
    (1): Sigmoid()
    (2): Linear(in_features=22, out_features=32, bias=True)
    (3): Sigmoid()
    (4): Linear(in_features=32, out_features=1, bias=True)
    (5): Sigmoid()
  )
)
Parameter Combination ([19, 22, 32, 1], 0, <class 'torch.nn.modules.activation.Sigmoid'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 30.7

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 22, 32, 1], 'activation': <class 'torch.nn.modules.linear.Identity'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=22, bias=True)
    (1): Identity()
    (2): Linear(in_features=22, out_features=32, bias=True)
    (3): Identity()
    (4): Linear(in_features=32, out_features=1, bias=True)
    (5): Identity()
  )
)
Parameter Combination ([19, 22, 32, 1], 0, <class 'torch.nn.modules.linear.Identity'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.3

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 22, 32, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=22, bias=True)
    (1): ReLU()
    (2): Linear(in_features=22, out_features=32, bias=True)
    (3): ReLU()
    (4): Linear(in_features=32, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination ([19, 22, 32, 1], 0, <class 'torch.nn.modules.activation.ReLU'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 0.0

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 22, 32, 1], 'activation': <class 'torch.nn.modules.activation.Sigmoid'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=22, bias=True)
    (1): Sigmoid()
    (2): Linear(in_features=22, out_features=32, bias=True)
    (3): Sigmoid()
    (4): Linear(in_features=32, out_features=1, bias=True)
    (5): Sigmoid()
  )
)
Parameter Combination ([19, 22, 32, 1], 0, <class 'torch.nn.modules.activation.Sigmoid'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 30.7

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 22, 32, 1], 'activation': <class 'torch.nn.modules.linear.Identity'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=22, bias=True)
    (1): Identity()
    (2): Linear(in_features=22, out_features=32, bias=True)
    (3): Identity()
    (4): Linear(in_features=32, out_features=1, bias=True)
    (5): Identity()
  )
)
Parameter Combination ([19, 22, 32, 1], 0, <class 'torch.nn.modules.linear.Identity'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.1

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 36, 44, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=36, bias=True)
    (1): ReLU()
    (2): Linear(in_features=36, out_features=44, bias=True)
    (3): ReLU()
    (4): Linear(in_features=44, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination ([19, 36, 44, 1], 0, <class 'torch.nn.modules.activation.ReLU'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 0.0

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 36, 44, 1], 'activation': <class 'torch.nn.modules.activation.Sigmoid'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=36, bias=True)
    (1): Sigmoid()
    (2): Linear(in_features=36, out_features=44, bias=True)
    (3): Sigmoid()
    (4): Linear(in_features=44, out_features=1, bias=True)
    (5): Sigmoid()
  )
)
Parameter Combination ([19, 36, 44, 1], 0, <class 'torch.nn.modules.activation.Sigmoid'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 30.7

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 36, 44, 1], 'activation': <class 'torch.nn.modules.linear.Identity'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=36, bias=True)
    (1): Identity()
    (2): Linear(in_features=36, out_features=44, bias=True)
    (3): Identity()
    (4): Linear(in_features=44, out_features=1, bias=True)
    (5): Identity()
  )
)
Parameter Combination ([19, 36, 44, 1], 0, <class 'torch.nn.modules.linear.Identity'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.1

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 36, 44, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=36, bias=True)
    (1): ReLU()
    (2): Linear(in_features=36, out_features=44, bias=True)
    (3): ReLU()
    (4): Linear(in_features=44, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination ([19, 36, 44, 1], 0, <class 'torch.nn.modules.activation.ReLU'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.3

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 36, 44, 1], 'activation': <class 'torch.nn.modules.activation.Sigmoid'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=36, bias=True)
    (1): Sigmoid()
    (2): Linear(in_features=36, out_features=44, bias=True)
    (3): Sigmoid()
    (4): Linear(in_features=44, out_features=1, bias=True)
    (5): Sigmoid()
  )
)
Parameter Combination ([19, 36, 44, 1], 0, <class 'torch.nn.modules.activation.Sigmoid'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 30.7

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 36, 44, 1], 'activation': <class 'torch.nn.modules.linear.Identity'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=36, bias=True)
    (1): Identity()
    (2): Linear(in_features=36, out_features=44, bias=True)
    (3): Identity()
    (4): Linear(in_features=44, out_features=1, bias=True)
    (5): Identity()
  )
)
Parameter Combination ([19, 36, 44, 1], 0, <class 'torch.nn.modules.linear.Identity'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.0

Grid search took 0.8 minutes.
Step 3
Best Params, Parameter Combination ([19, 29, 39, 1], 0, <class 'torch.nn.modules.activation.ReLU'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.7

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 20, 28, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=20, bias=True)
    (1): ReLU()
    (2): Linear(in_features=20, out_features=28, bias=True)
    (3): ReLU()
    (4): Linear(in_features=28, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination ([19, 20, 28, 1], 0, <class 'torch.nn.modules.activation.ReLU'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.1

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 20, 28, 1], 'activation': <class 'torch.nn.modules.activation.Sigmoid'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=20, bias=True)
    (1): Sigmoid()
    (2): Linear(in_features=20, out_features=28, bias=True)
    (3): Sigmoid()
    (4): Linear(in_features=28, out_features=1, bias=True)
    (5): Sigmoid()
  )
)
Parameter Combination ([19, 20, 28, 1], 0, <class 'torch.nn.modules.activation.Sigmoid'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 30.7

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 20, 28, 1], 'activation': <class 'torch.nn.modules.linear.Identity'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=20, bias=True)
    (1): Identity()
    (2): Linear(in_features=20, out_features=28, bias=True)
    (3): Identity()
    (4): Linear(in_features=28, out_features=1, bias=True)
    (5): Identity()
  )
)
Parameter Combination ([19, 20, 28, 1], 0, <class 'torch.nn.modules.linear.Identity'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.3

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 20, 28, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=20, bias=True)
    (1): ReLU()
    (2): Linear(in_features=20, out_features=28, bias=True)
    (3): ReLU()
    (4): Linear(in_features=28, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination ([19, 20, 28, 1], 0, <class 'torch.nn.modules.activation.ReLU'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 39.5

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 20, 28, 1], 'activation': <class 'torch.nn.modules.activation.Sigmoid'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=20, bias=True)
    (1): Sigmoid()
    (2): Linear(in_features=20, out_features=28, bias=True)
    (3): Sigmoid()
    (4): Linear(in_features=28, out_features=1, bias=True)
    (5): Sigmoid()
  )
)
Parameter Combination ([19, 20, 28, 1], 0, <class 'torch.nn.modules.activation.Sigmoid'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 30.7

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 20, 28, 1], 'activation': <class 'torch.nn.modules.linear.Identity'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=20, bias=True)
    (1): Identity()
    (2): Linear(in_features=20, out_features=28, bias=True)
    (3): Identity()
    (4): Linear(in_features=28, out_features=1, bias=True)
    (5): Identity()
  )
)
Parameter Combination ([19, 20, 28, 1], 0, <class 'torch.nn.modules.linear.Identity'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.2

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 33, 44, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=33, bias=True)
    (1): ReLU()
    (2): Linear(in_features=33, out_features=44, bias=True)
    (3): ReLU()
    (4): Linear(in_features=44, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination ([19, 33, 44, 1], 0, <class 'torch.nn.modules.activation.ReLU'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 41.0

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 33, 44, 1], 'activation': <class 'torch.nn.modules.activation.Sigmoid'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=33, bias=True)
    (1): Sigmoid()
    (2): Linear(in_features=33, out_features=44, bias=True)
    (3): Sigmoid()
    (4): Linear(in_features=44, out_features=1, bias=True)
    (5): Sigmoid()
  )
)
Parameter Combination ([19, 33, 44, 1], 0, <class 'torch.nn.modules.activation.Sigmoid'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 30.7

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 33, 44, 1], 'activation': <class 'torch.nn.modules.linear.Identity'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=33, bias=True)
    (1): Identity()
    (2): Linear(in_features=33, out_features=44, bias=True)
    (3): Identity()
    (4): Linear(in_features=44, out_features=1, bias=True)
    (5): Identity()
  )
)
Parameter Combination ([19, 33, 44, 1], 0, <class 'torch.nn.modules.linear.Identity'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.1

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 33, 44, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=33, bias=True)
    (1): ReLU()
    (2): Linear(in_features=33, out_features=44, bias=True)
    (3): ReLU()
    (4): Linear(in_features=44, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination ([19, 33, 44, 1], 0, <class 'torch.nn.modules.activation.ReLU'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 41.0

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 33, 44, 1], 'activation': <class 'torch.nn.modules.activation.Sigmoid'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=33, bias=True)
    (1): Sigmoid()
    (2): Linear(in_features=33, out_features=44, bias=True)
    (3): Sigmoid()
    (4): Linear(in_features=44, out_features=1, bias=True)
    (5): Sigmoid()
  )
)
Parameter Combination ([19, 33, 44, 1], 0, <class 'torch.nn.modules.activation.Sigmoid'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 30.6

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 33, 44, 1], 'activation': <class 'torch.nn.modules.linear.Identity'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=33, bias=True)
    (1): Identity()
    (2): Linear(in_features=33, out_features=44, bias=True)
    (3): Identity()
    (4): Linear(in_features=44, out_features=1, bias=True)
    (5): Identity()
  )
)
Parameter Combination ([19, 33, 44, 1], 0, <class 'torch.nn.modules.linear.Identity'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.1

Grid search took 0.8 minutes.
Step 4
Best Params, Parameter Combination ([19, 33, 44, 1], 0, <class 'torch.nn.modules.activation.ReLU'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 41.0

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 23, 32, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=23, bias=True)
    (1): ReLU()
    (2): Linear(in_features=23, out_features=32, bias=True)
    (3): ReLU()
    (4): Linear(in_features=32, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination ([19, 23, 32, 1], 0, <class 'torch.nn.modules.activation.ReLU'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.7

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 23, 32, 1], 'activation': <class 'torch.nn.modules.activation.Sigmoid'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=23, bias=True)
    (1): Sigmoid()
    (2): Linear(in_features=23, out_features=32, bias=True)
    (3): Sigmoid()
    (4): Linear(in_features=32, out_features=1, bias=True)
    (5): Sigmoid()
  )
)
Parameter Combination ([19, 23, 32, 1], 0, <class 'torch.nn.modules.activation.Sigmoid'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 30.6

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 23, 32, 1], 'activation': <class 'torch.nn.modules.linear.Identity'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=23, bias=True)
    (1): Identity()
    (2): Linear(in_features=23, out_features=32, bias=True)
    (3): Identity()
    (4): Linear(in_features=32, out_features=1, bias=True)
    (5): Identity()
  )
)
Parameter Combination ([19, 23, 32, 1], 0, <class 'torch.nn.modules.linear.Identity'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.2

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 23, 32, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=23, bias=True)
    (1): ReLU()
    (2): Linear(in_features=23, out_features=32, bias=True)
    (3): ReLU()
    (4): Linear(in_features=32, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination ([19, 23, 32, 1], 0, <class 'torch.nn.modules.activation.ReLU'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 0.0

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 23, 32, 1], 'activation': <class 'torch.nn.modules.activation.Sigmoid'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=23, bias=True)
    (1): Sigmoid()
    (2): Linear(in_features=23, out_features=32, bias=True)
    (3): Sigmoid()
    (4): Linear(in_features=32, out_features=1, bias=True)
    (5): Sigmoid()
  )
)
Parameter Combination ([19, 23, 32, 1], 0, <class 'torch.nn.modules.activation.Sigmoid'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 30.6

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 23, 32, 1], 'activation': <class 'torch.nn.modules.linear.Identity'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=23, bias=True)
    (1): Identity()
    (2): Linear(in_features=23, out_features=32, bias=True)
    (3): Identity()
    (4): Linear(in_features=32, out_features=1, bias=True)
    (5): Identity()
  )
)
Parameter Combination ([19, 23, 32, 1], 0, <class 'torch.nn.modules.linear.Identity'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.0

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 38, 51, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=38, bias=True)
    (1): ReLU()
    (2): Linear(in_features=38, out_features=51, bias=True)
    (3): ReLU()
    (4): Linear(in_features=51, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination ([19, 38, 51, 1], 0, <class 'torch.nn.modules.activation.ReLU'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.2

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 38, 51, 1], 'activation': <class 'torch.nn.modules.activation.Sigmoid'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=38, bias=True)
    (1): Sigmoid()
    (2): Linear(in_features=38, out_features=51, bias=True)
    (3): Sigmoid()
    (4): Linear(in_features=51, out_features=1, bias=True)
    (5): Sigmoid()
  )
)
Parameter Combination ([19, 38, 51, 1], 0, <class 'torch.nn.modules.activation.Sigmoid'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 30.7

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 38, 51, 1], 'activation': <class 'torch.nn.modules.linear.Identity'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=38, bias=True)
    (1): Identity()
    (2): Linear(in_features=38, out_features=51, bias=True)
    (3): Identity()
    (4): Linear(in_features=51, out_features=1, bias=True)
    (5): Identity()
  )
)
Parameter Combination ([19, 38, 51, 1], 0, <class 'torch.nn.modules.linear.Identity'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.0

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 38, 51, 1], 'activation': <class 'torch.nn.modules.activation.ReLU'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=38, bias=True)
    (1): ReLU()
    (2): Linear(in_features=38, out_features=51, bias=True)
    (3): ReLU()
    (4): Linear(in_features=51, out_features=1, bias=True)
    (5): ReLU()
  )
)
Parameter Combination ([19, 38, 51, 1], 0, <class 'torch.nn.modules.activation.ReLU'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 0.0

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 38, 51, 1], 'activation': <class 'torch.nn.modules.activation.Sigmoid'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=38, bias=True)
    (1): Sigmoid()
    (2): Linear(in_features=38, out_features=51, bias=True)
    (3): Sigmoid()
    (4): Linear(in_features=51, out_features=1, bias=True)
    (5): Sigmoid()
  )
)
Parameter Combination ([19, 38, 51, 1], 0, <class 'torch.nn.modules.activation.Sigmoid'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 30.7

run: {'learning_rate': 0.12531, 'batch_size': 114, 'layer': [19, 38, 51, 1], 'activation': <class 'torch.nn.modules.linear.Identity'>, 'dropout': 0}
NeuralNetwork(
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=19, out_features=38, bias=True)
    (1): Identity()
    (2): Linear(in_features=38, out_features=51, bias=True)
    (3): Identity()
    (4): Linear(in_features=51, out_features=1, bias=True)
    (5): Identity()
  )
)
Parameter Combination ([19, 38, 51, 1], 0, <class 'torch.nn.modules.linear.Identity'>) with keys ['layer', 'dropout', 'activation']
 Accuracy: 40.1

Grid search took 0.8 minutes.
Local search took 4.0 minutes.
([19, 33, 44, 1], 0, <class 'torch.nn.modules.activation.ReLU'>)
